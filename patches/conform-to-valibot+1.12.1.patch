diff --git a/node_modules/conform-to-valibot/dist/index.js b/node_modules/conform-to-valibot/dist/index.js
index f060138..86756f2 100644
--- a/node_modules/conform-to-valibot/dist/index.js
+++ b/node_modules/conform-to-valibot/dist/index.js
@@ -247,7 +247,7 @@ function enableTypeCoercion(type) {
     case "non_nullish":
     case "non_nullable": {
       const wrapSchema = enableTypeCoercion(type.wrapped);
-      if ("pipe" in wrapSchema) {
+      if ("pipe" in wrapSchema && wrapSchema.pipe[0].type === "unknown") {
         const unknown = { ...(0, import_valibot.unknown)(), expects: type.expects };
         if (type.async) {
           return (0, import_valibot.pipeAsync)(unknown, wrapSchema.pipe[1], type);
diff --git a/node_modules/conform-to-valibot/dist/index.mjs b/node_modules/conform-to-valibot/dist/index.mjs
index 97fc754..1b27ef1 100644
--- a/node_modules/conform-to-valibot/dist/index.mjs
+++ b/node_modules/conform-to-valibot/dist/index.mjs
@@ -231,7 +231,7 @@ function enableTypeCoercion(type) {
     case "non_nullish":
     case "non_nullable": {
       const wrapSchema = enableTypeCoercion(type.wrapped);
-      if ("pipe" in wrapSchema) {
+      if ("pipe" in wrapSchema && wrapSchema.pipe[0].type === "unknown") {
         const unknown = { ...valibotUnknown(), expects: type.expects };
         if (type.async) {
           return pipeAsync(unknown, wrapSchema.pipe[1], type);
