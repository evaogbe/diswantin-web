name: 🚀 Deploy

on:
  push:
    branches: [main]
  pull_request:

jobs:
  format:
    name: 🎨 Format
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.2.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🎨 Format
        run: npm run format
      - name: ✔️ Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5.1.0
        with:
          commit_message: 🎨 Apply formatting changes
          branch: ${{ github.head_ref }}

  typecheck:
    name: ʦ Type check
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.2.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🔎 Type check
        run: npm run typecheck

  lint:
    name: ⬣ Lint
    runs-on: ubuntu-latest
    needs: [format]
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.2.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🏷️ Generate types
        run: npx react-router typegen
      - name: 🔬 Lint
        run: npm run lint

  spellcheck:
    name: ✏️ Spell check
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ✏️ Spell check
        uses: streetsidesoftware/cspell-action@v6.10.1

  unit-test:
    name: ⚡ Unit tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.2.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🩹 Patch package
        run: npx patch-package
      - name: 🗃️ Setup test DB
        run: npm run test:setup
      - name: ⚡ Run unit tests
        run: npm run test:unit -- --run

  e2e-test:
    name: 🎭 End-to-end tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.2.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🩹 Patch package
        run: npx patch-package
      - name: 📥 Install browsers
        run: npm run init:test
      - name: 🗃️ Setup test DB
        run: npm run test:setup
      - name: 🎭 Run end-to-end tests
        run: npm run test:e2e
      - name: 📊 Upload report
        uses: actions/upload-artifact@v4.6.0
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [format, typecheck, lint, spellcheck, unit-test, e2e-test]
    # only deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.2.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🩹 Patch package
        run: npx patch-package
      - name: 🗃️ Migrate database
        run: npm run db:migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - name: ⚙️ Build app
        run: npm run build
        env:
          SENTRY_RELEASE: ${{ github.sha }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: 🚆 Install Railway
        run: npm i -g @railway/cli
      - name: 🚀 Deploy production
        run: railway up --service diswantin-web
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
