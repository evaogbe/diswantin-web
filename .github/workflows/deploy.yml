name: 🚀 Deploy

on:
  push:
    branches: [main]
  pull_request:

jobs:
  format:
    name: 🎨 Format
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🎨 Format
        run: npm run format
      - name: ✔️ Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: 🎨 Apply formatting changes
          branch: ${{ github.head_ref }}

  typecheck:
    name: ʦ Type check
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🔎 Type check
        run: npm run typecheck

  lint:
    name: ⬣ Lint
    runs-on: ubuntu-latest
    needs: [format]
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🔬 Lint
        run: npm run lint

  spellcheck:
    name: ✏️ Spell check
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ✏️ Spell check
        uses: streetsidesoftware/cspell-action@v6.9.0

  e2e-test:
    name: ⚫️ End-to-end test
    runs-on: ubuntu-latest
    container: node:22-bookworm
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: diswantin
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
    steps:
      - name: 🛂 Install sudo package
        run: apt update && apt install sudo
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install Chromedriver dependencies
        run: >-
          sudo apt-get install -y gconf-service libasound2 libatk1.0-0 libc6
          libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1
          libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4
          libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1
          libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3
          libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates
          fonts-liberation libnss3 lsb-release xdg-utils wget ca-certificates
      - name: 🌐 Set up Chrome
        uses: browser-actions/setup-chrome@v1.7.2
        with:
          install-chromedriver: true
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🖥️ Install Xvfb
        run: sudo apt-get install -y xvfb
      - name: 🏄 Copy test env vars
        run: cp env/example.env env/test.env
      - name: 🗃️ Push database schema
        run: npm run db:push -- --force
        env:
          NODE_ENV: test
      - name: ⚙️ Build app
        run: npm run build
        env:
          NODE_ENV: test
      - name: 🦉 Run end-to-end tests
        run: xvfb-run --auto-servernum npm run test:ci

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [format, typecheck, lint, spellcheck, e2e-test]
    # only deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.2.2
      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          cache: npm
          node-version: 22
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🗃️ Migrate database
        run: npm run db:migrate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - name: ⚙️ Build app
        run: npm run build
        env:
          SENTRY_RELEASE: ${{ github.sha }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NODE_ENV: production
      - name: 🚆 Install Railway
        run: npm i -g @railway/cli
      - name: 🚀 Deploy production
        run: railway up --service diswantin-web
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
